<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Á•ûÁÖûÂàÜÊûê - Á•ûÁßòÂ≠¶È¢ÑÊµã‰∏≠ÂøÉ</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%);
            color: #e0e0e0;
            min-height: 100vh;
            overflow-x: hidden;
        }
        .stars { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; }
        .star { position: absolute; background: #fff; border-radius: 50%; animation: twinkle 3s infinite; }
        @keyframes twinkle { 0%, 100% { opacity: 0.3; } 50% { opacity: 1; } }
        
        
        
        
        
        
        
        
        .main-container { display: flex; margin-top: 70px; min-height: calc(100vh - 70px); }
        .sidebar {
            width: 280px;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
            border-right: 2px solid #00ffff;
            padding: 20px 0;
        }
        .category-title {
            color: #00ffff;
            font-size: 18px;
            font-weight: bold;
            padding: 10px 20px;
            border-bottom: 1px solid rgba(0, 255, 255, 0.3);
            margin-bottom: 10px;
        }
        .function-list { list-style: none; }
        .function-item { margin: 2px 0; }
        .function-link {
            display: block;
            padding: 12px 20px;
            color: #ccc;
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }
        .function-link:hover {
            background: rgba(0, 255, 255, 0.1);
            color: #00ffff;
            border-left-color: #00ffff;
            transform: translateX(5px);
        }
        .function-link.active {
            background: rgba(0, 255, 255, 0.2);
            color: #00ffff;
            border-left-color: #00ffff;
        }
        .content-area { flex: 1; padding: 40px; }
        .page-title {
            font-size: 36px;
            background: linear-gradient(45deg, #00ffff, #ff00ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-align: center;
            margin-bottom: 30px;
            animation: glow 2s ease-in-out infinite alternate;
        }
        @keyframes glow {
            from { filter: drop-shadow(0 0 20px rgba(0, 255, 255, 0.5)); }
            to { filter: drop-shadow(0 0 30px rgba(255, 0, 255, 0.5)); }
        }
        .input-section {
            background: rgba(0, 0, 0, 0.6);
            border: 2px solid #00ffff;
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            backdrop-filter: blur(10px);
        }
        .input-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        .input-group { display: flex; flex-direction: column; }
        .input-label { color: #00ffff; font-weight: bold; margin-bottom: 8px; }
        .input-field {
            padding: 12px;
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #333;
            border-radius: 8px;
            color: #fff;
            font-size: 16px;
        }
        .input-field:focus {
            border-color: #00ffff;
            box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
            outline: none;
        }
        .analyze-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(45deg, #00ffff, #ff00ff);
            border: none;
            border-radius: 10px;
            color: #000;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .analyze-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0, 255, 255, 0.3);
        }
        .gods-analysis {
            background: rgba(0, 0, 0, 0.6);
            border: 2px solid #00ffff;
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(10px);
            display: none;
        }
        .gods-analysis.show { display: block; animation: fadeInUp 0.5s ease; }
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .gods-tabs {
            display: flex;
            margin-bottom: 30px;
            border-bottom: 1px solid rgba(0, 255, 255, 0.3);
        }
        .tab-btn {
            padding: 12px 20px;
            background: transparent;
            border: none;
            color: #ccc;
            cursor: pointer;
            transition: all 0.3s ease;
            border-bottom: 2px solid transparent;
        }
        .tab-btn.active {
            color: #00ffff;
            border-bottom-color: #00ffff;
        }
        .gods-section {
            display: none;
            padding: 20px 0;
        }
        .gods-section.active { display: block; }
        .gods-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        .god-card {
            background: rgba(255, 215, 0, 0.1);
            border: 2px solid #ffd700;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            transition: all 0.3s ease;
        }
        .god-card.evil {
            background: rgba(255, 0, 0, 0.1);
            border-color: #ff4500;
        }
        .god-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(255, 215, 0, 0.3);
        }
        .god-card.evil:hover {
            box-shadow: 0 10px 30px rgba(255, 69, 0, 0.3);
        }
        .god-icon {
            font-size: 48px;
            margin-bottom: 15px;
        }
        .god-name {
            font-size: 20px;
            font-weight: bold;
            color: #ffd700;
            margin-bottom: 10px;
        }
        .god-card.evil .god-name {
            color: #ff4500;
        }
        .god-description {
            color: #ccc;
            line-height: 1.6;
            margin-bottom: 15px;
        }
        .god-effect {
            background: rgba(0, 255, 255, 0.1);
            border: 1px solid #00ffff;
            border-radius: 8px;
            padding: 10px;
            margin-bottom: 10px;
        }
        .god-card.evil .god-effect {
            background: rgba(255, 0, 0, 0.1);
            border-color: #ff4500;
        }
        .effect-title {
            color: #00ffff;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .god-card.evil .effect-title {
            color: #ff4500;
        }
        .effect-content {
            color: #ccc;
            font-size: 14px;
        }
        .resolution-section {
            background: rgba(0, 0, 0, 0.6);
            border: 2px solid #ff00ff;
            border-radius: 20px;
            padding: 30px;
            margin-top: 30px;
            backdrop-filter: blur(10px);
            display: none;
        }
        .resolution-section.show { display: block; animation: fadeInUp 0.5s ease; }
        .resolution-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }
        .resolution-card {
            background: rgba(255, 0, 255, 0.1);
            border: 1px solid #ff00ff;
            border-radius: 10px;
            padding: 20px;
        }
        .resolution-title {
            color: #ff00ff;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .resolution-content {
            color: #ccc;
            font-size: 14px;
            line-height: 1.5;
        }
    </style>
    <!-- ÂÖ¨ÂÖ±ÂØºËà™Ê†èÊ†∑Âºè -->
    <link rel="stylesheet" href="../../components/navigation.css">
    <link rel="stylesheet" href="../../components/bazi-sidebar.css">
</head>
<body>
    <div class="stars" id="stars"></div>
    
    <div class="main-container">
        <aside class="sidebar">
            <div class="sidebar-category">
                <div class="category-title">ÂÖ´Â≠óÂëΩÁêÜ</div>
                <ul class="function-list">
                    <li class="function-item"><a href="chart.html" class="function-link">ÂÖ´Â≠óÊéíÁõò</a></li>
                    <li class="function-item"><a href="elements.html" class="function-link">‰∫îË°åÂàÜÊûê</a></li>
                    <li class="function-item"><a href="nayin.html" class="function-link">Á∫≥Èü≥‰∫îË°å</a></li>
                    <li class="function-item"><a href="fortune.html" class="function-link">Â§ßËøêÊµÅÂπ¥</a></li>
                    <li class="function-item"><a href="gods.html" class="function-link active">Á•ûÁÖûÂàÜÊûê</a></li>
                    <li class="function-item"><a href="marriage.html" class="function-link">Â©öÂßªÈÖçÂØπ</a></li>
                </ul>
            </div>
        </aside>
        <main class="content-area">
            <h1 class="page-title">‚ö° Á•ûÁÖûÂàÜÊûê</h1>
            <div class="input-section">
                <h3 style="color: #00ffff; margin-bottom: 20px; text-align: center;">üéØ ËæìÂÖ•ÊÇ®ÁöÑÂá∫Áîü‰ø°ÊÅØ</h3>
                <div class="input-grid">
                    <div class="input-group">
                        <label class="input-label">ÂßìÂêç</label>
                        <input type="text" id="name" class="input-field" placeholder="ËØ∑ËæìÂÖ•ÂßìÂêç">
                    </div>
                    <div class="input-group">
                        <label class="input-label">ÊÄßÂà´</label>
                        <select id="gender" class="input-field">
                            <option value="male">Áî∑</option>
                            <option value="female">Â•≥</option>
                        </select>
                    </div>
                    <div class="input-group">
                        <label class="input-label">Âá∫ÁîüÊó•Êúü</label>
                        <input type="date" id="birthdate" class="input-field">
                    </div>
                    <div class="input-group">
                        <label class="input-label">Âá∫ÁîüÊó∂Èó¥</label>
                        <input type="time" id="birthtime" class="input-field">
                    </div>
                </div>
                <button onclick="analyzeGods()" class="analyze-btn">‚ö° Á•ûÁÖûÂàÜÊûê</button>
            </div>
            <div id="godsAnalysis" class="gods-analysis">
                <h3 style="color: #ffd700; text-align: center; margin-bottom: 20px;">ÂëΩÂ±ÄÁ•ûÁÖûÂàÜÊûê</h3>
                <div class="gods-tabs">
                    <button class="tab-btn active" onclick="switchGodsTab('lucky')">ÂêâÁ•ûË¥µ‰∫∫</button>
                    <button class="tab-btn" onclick="switchGodsTab('evil')">Âá∂ÁÖûÂàëÂÜ≤</button>
                    <button class="tab-btn" onclick="switchGodsTab('special')">ÁâπÊÆäÁ•ûÁÖû</button>
                </div>
                <div id="luckyGods" class="gods-section active">
                    <div class="gods-grid" id="luckyGodsGrid"></div>
                </div>
                <div id="evilGods" class="gods-section">
                    <div class="gods-grid" id="evilGodsGrid"></div>
                </div>
                <div id="specialGods" class="gods-section">
                    <div class="gods-grid" id="specialGodsGrid"></div>
                </div>
            </div>
            <div id="resolutionSection" class="resolution-section">
                <h3 style="color: #ff00ff; text-align: center; margin-bottom: 20px;">ÂåñËß£Âª∫ËÆÆ</h3>
                <div class="resolution-grid" id="resolutionGrid"></div>
            </div>
        </main>
    </div>
    <script>
        const godsData = {
            lucky: [
                {
                    name: 'Â§©‰πôË¥µ‰∫∫',
                    icon: 'üëë',
                    description: 'ÊúÄÂ∞äË¥µÁöÑÂêâÁ•ûÔºå‰∏ªËÅ™ÊòéÊô∫ÊÖßÔºåÈÅá‰∫ãÊúâË¥µ‰∫∫Áõ∏Âä©ÔºåÂåñÈô©‰∏∫Â§∑„ÄÇ',
                    effect: 'Ë¥µ‰∫∫ËøêÊó∫ÁõõÔºåÂÆπÊòìÂæóÂà∞ÊùÉÂ®Å‰∫∫Â£´ÁöÑÂ∏ÆÂä©ÂíåÊèêÊê∫Ôºå‰∫ã‰∏öÂèëÂ±ïÈ°∫Âà©„ÄÇ'
                },
                {
                    name: 'Â§™ÊûÅË¥µ‰∫∫',
                    icon: '‚òØÔ∏è',
                    description: '‰∏ªËÅ™ÊòéÂ•ΩÂ≠¶ÔºåÂØπÁéÑÂ≠¶„ÄÅÂì≤Â≠¶ÊúâÂ§©ËµãÔºåÊô∫ÊÖßË∂ÖÁæ§„ÄÇ',
                    effect: 'Â≠¶‰π†ËÉΩÂäõÂº∫ÔºåÊÇüÊÄßÈ´òÔºåÈÄÇÂêà‰ªé‰∫ãÂ≠¶ÊúØÁ†îÁ©∂ÊàñÁ≤æÁ•ûÈ¢ÜÂüüÁöÑÂ∑•‰Ωú„ÄÇ'
                },
                {
                    name: 'ÊñáÊòåË¥µ‰∫∫',
                    icon: 'üìö',
                    description: '‰∏ªÊñáÈááÂá∫‰ºóÔºåÂ≠¶‰∏öÊúâÊàêÔºåËÄÉËØïËøê‰Ω≥ÔºåÈÄÇÂêàÊñáËÅåÂ∑•‰Ωú„ÄÇ',
                    effect: 'Â≠¶‰π†ÊàêÁª©‰ºòÁßÄÔºåÊñáÁ¨î‰Ω≥ÔºåÂÆπÊòìÂú®ÊñáÂåñÊïôËÇ≤È¢ÜÂüüÂèñÂæóÊàêÂ∞±„ÄÇ'
                },
                {
                    name: 'Âæ∑ÁßÄË¥µ‰∫∫',
                    icon: 'üåü',
                    description: '‰∏ªÂìÅÂæ∑È´òÂ∞öÔºå‰∏∫‰∫∫Ê≠£Áõ¥ÔºåÂèó‰∫∫Â∞äÊï¨ÔºåÊúâÈÅìÂæ∑Â®ÅÊúõ„ÄÇ',
                    effect: '‰∫∫Ê†ºÈ≠ÖÂäõÂº∫ÔºåÈÅìÂæ∑ÂìÅË¥®È´òÔºåÂÆπÊòìËé∑Âæó‰ªñ‰∫∫ÁöÑ‰ø°‰ªªÂíåÂ∞äÈáç„ÄÇ'
                }
            ],
            evil: [
                {
                    name: 'ÁôΩËôéÁÖû',
                    icon: 'üêÖ',
                    description: '‰∏ªË°ÄÂÖâ‰πãÁÅæÔºåÊÑèÂ§ñ‰º§ÂÆ≥ÔºåÊâãÊúØÔºåÂÆπÊòìÊúâÂ§ñ‰º§ÊàñÊµÅË°Ä‰∫ã‰ª∂„ÄÇ',
                    effect: 'ÈúÄÊ≥®ÊÑèÂÆâÂÖ®ÔºåÈÅøÂÖçÂç±Èô©Ê¥ªÂä®ÔºåÂ∞èÂøÉÊÑèÂ§ñ‰º§ÂÆ≥ÔºåÂÆöÊúü‰ΩìÊ£Ä„ÄÇ'
                },
                {
                    name: 'ÁæäÂàÉÁÖû',
                    icon: '‚öîÔ∏è',
                    description: '‰∏ªÊÄßÊ†ºÂàöÂº∫ÔºåÂÆπÊòìÂÜ≤Âä®Ôºå‰∏é‰∫∫ÂèëÁîüÂÜ≤Á™ÅÔºåÈúÄË¶ÅÊéßÂà∂ËÑæÊ∞î„ÄÇ',
                    effect: 'ÊÄßÊ†ºÊÄ•Ë∫ÅÔºåÂÆπÊòì‰∏é‰∫∫ÂèëÁîü‰∫âÊâßÔºåÈúÄË¶ÅÂ≠¶‰ºöÊéßÂà∂ÊÉÖÁª™„ÄÇ'
                },
                {
                    name: 'Â≠§Ëæ∞ÂØ°ÂÆø',
                    icon: 'üåô',
                    description: '‰∏ªÂ≠§Áã¨ÂØÇÂØûÔºå‰∫∫ÈôÖÂÖ≥Á≥ªËæÉÂ∑ÆÔºåÂ©öÂßªÊÑüÊÉÖ‰∏çÈ°∫„ÄÇ',
                    effect: 'ÂÆπÊòìÊÑüÂà∞Â≠§Áã¨Ôºå‰∫∫ÈôÖÂÖ≥Á≥ªÈúÄË¶Å‰∏ªÂä®Áª¥Êä§ÔºåÊÑüÊÉÖË∑ØËæÉ‰∏∫ÂùéÂù∑„ÄÇ'
                },
                {
                    name: 'Âä´ÁÖû',
                    icon: 'üí•',
                    description: '‰∏ªË¥¢Ëøê‰∏ç‰Ω≥ÔºåÂÆπÊòìÁ†¥Ë¥¢ÔºåÊäïËµÑÈúÄË∞®ÊÖéÔºåÈÅøÂÖçÊäïÊú∫„ÄÇ',
                    effect: 'Ë¥¢ËøêÊ≥¢Âä®Â§ßÔºåÈúÄË¶ÅË∞®ÊÖéÁêÜË¥¢ÔºåÈÅøÂÖçÈ´òÈ£éÈô©ÊäïËµÑ„ÄÇ'
                }
            ],
            special: [
                {
                    name: 'ÂçéÁõñÊòü',
                    icon: 'üé≠',
                    description: '‰∏ªËâ∫ÊúØÊâçÂçéÔºåÊúâÂÆóÊïôÁºòÂàÜÔºåÈÄÇÂêàËâ∫ÊúØÂàõ‰ΩúÊàñÁ≤æÁ•û‰øÆË°å„ÄÇ',
                    effect: 'Ëâ∫ÊúØÂ§©ËµãÈ´òÔºåÊúâÁã¨ÁâπÁöÑÂÆ°ÁæéËÉΩÂäõÔºåÈÄÇÂêàÂàõÊÑèÂ∑•‰Ωú„ÄÇ'
                },
                {
                    name: 'Ê°ÉËä±Êòü',
                    icon: 'üå∏',
                    description: '‰∏ªÊÑüÊÉÖ‰∏∞ÂØåÔºåÂºÇÊÄßÁºò‰Ω≥Ôºå‰ΩÜÈúÄÊ≥®ÊÑèÊ°ÉËä±Âä´„ÄÇ',
                    effect: 'È≠ÖÂäõÂçÅË∂≥ÔºåÂºÇÊÄßÁºòÂ•ΩÔºå‰ΩÜË¶ÅÊ≥®ÊÑèÊÑüÊÉÖÈóÆÈ¢òÁöÑÂ§ÑÁêÜ„ÄÇ'
                },
                {
                    name: 'È©øÈ©¨Êòü',
                    icon: 'üêé',
                    description: '‰∏ªÂ•îÊ≥¢Âä≥Á¢åÔºåÂèòÂä®ËæÉÂ§öÔºåÈÄÇÂêàÂ§ñÂá∫ÂèëÂ±ïÊàñ‰ªé‰∫ãÂèòÂä®ÊÄßÂ∑•‰Ωú„ÄÇ',
                    effect: 'Ê¥ªÂä®ÂäõÂº∫ÔºåÈÄÇÂêàÊóÖË°åÊàñÂèòÂä®ÊÄßÂ∑•‰ΩúÔºå‰ΩÜË¶ÅÊ≥®ÊÑèÁ®≥ÂÆöÊÄß„ÄÇ'
                },
                {
                    name: 'Â§©ÂåªÊòü',
                    icon: 'üè•',
                    description: '‰∏ªÂåªËçØÁºòÂàÜÔºåË∫´‰ΩìÂ∫∑Â§çËÉΩÂäõÂº∫ÔºåÊúâÂåªÁñóÊàñÂÖªÁîüÂ§©Ëµã„ÄÇ',
                    effect: 'Ë∫´‰ΩìÊÅ¢Â§çÂäõÂº∫ÔºåÂØπÂåªÁñó‰øùÂÅ•ÊúâÂ§©ËµãÔºåÂÖ≥Ê≥®ÂÅ•Â∫∑ÂÖªÁîü„ÄÇ'
                }
            ]
        };

        function createStars() {
            const starsContainer = document.getElementById('stars');
            for (let i = 0; i < 100; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.width = Math.random() * 3 + 1 + 'px';
                star.style.height = star.style.width;
                star.style.animationDelay = Math.random() * 3 + 's';
                starsContainer.appendChild(star);
            }
        }

        function analyzeGods() {
            const name = document.getElementById('name').value;
            const gender = document.getElementById('gender').value;
            const birthdate = document.getElementById('birthdate').value;
            const birthtime = document.getElementById('birthtime').value;
            
            if (!name || !birthdate || !birthtime) {
                alert('ËØ∑ÂÆåÊï¥Â°´ÂÜôÊâÄÊúâ‰ø°ÊÅØÔºÅ');
                return;
            }

            // Ê®°ÊãüÁ•ûÁÖûÂàÜÊûê
            generateGodsAnalysis();
            generateResolution();
            
            document.getElementById('godsAnalysis').classList.add('show');
            document.getElementById('resolutionSection').classList.add('show');
        }

        function generateGodsAnalysis() {
            // ÁîüÊàêÂêâÁ•ûÂàÜÊûê
            const luckyGrid = document.getElementById('luckyGodsGrid');
            luckyGrid.innerHTML = '';
            
            // ÈöèÊú∫ÈÄâÊã©2-3‰∏™ÂêâÁ•û
            const selectedLucky = getRandomItems(godsData.lucky, 3);
            selectedLucky.forEach(god => {
                const card = createGodCard(god, false);
                luckyGrid.appendChild(card);
            });

            // ÁîüÊàêÂá∂ÁÖûÂàÜÊûê
            const evilGrid = document.getElementById('evilGodsGrid');
            evilGrid.innerHTML = '';
            
            // ÈöèÊú∫ÈÄâÊã©1-2‰∏™Âá∂ÁÖû
            const selectedEvil = getRandomItems(godsData.evil, 2);
            selectedEvil.forEach(god => {
                const card = createGodCard(god, true);
                evilGrid.appendChild(card);
            });

            // ÁîüÊàêÁâπÊÆäÁ•ûÁÖûÂàÜÊûê
            const specialGrid = document.getElementById('specialGodsGrid');
            specialGrid.innerHTML = '';
            
            // ÈöèÊú∫ÈÄâÊã©2‰∏™ÁâπÊÆäÁ•ûÁÖû
            const selectedSpecial = getRandomItems(godsData.special, 2);
            selectedSpecial.forEach(god => {
                const card = createGodCard(god, false);
                specialGrid.appendChild(card);
            });
        }

        function createGodCard(god, isEvil) {
            const card = document.createElement('div');
            card.className = 'god-card';
            if (isEvil) card.classList.add('evil');
            
            card.innerHTML = `
                <div class="god-icon">${god.icon}</div>
                <div class="god-name">${god.name}</div>
                <div class="god-description">${god.description}</div>
                <div class="god-effect">
                    <div class="effect-title">${isEvil ? 'Ê≥®ÊÑè‰∫ãÈ°π' : 'ÂêâÁ•ûÊïàÂ∫î'}</div>
                    <div class="effect-content">${god.effect}</div>
                </div>
            `;
            
            return card;
        }

        function generateResolution() {
            const resolutionGrid = document.getElementById('resolutionGrid');
            resolutionGrid.innerHTML = '';
            
            const resolutions = [
                {
                    title: 'ÂêâÁ•ûÂº∫Âåñ',
                    content: 'Â§öË°åÂñÑ‰∫ãÔºåÁßØÂæ∑Ë°åÂñÑÔºå‰øùÊåÅÊ≠£ÂøµÔºåÂ¢ûÂº∫Ë¥µ‰∫∫ËøêÂäø„ÄÇ‰Ω©Êà¥Áõ∏Â∫îÁöÑÂêâÁ••Áâ©ÂìÅ„ÄÇ'
                },
                {
                    title: 'Âá∂ÁÖûÂåñËß£',
                    content: '‰øùÊåÅÂπ≥ÂíåÂøÉÊÄÅÔºåÈÅøÂÖçÂÜ≤Âä®Ë°å‰∫ã„ÄÇÂèØÈÄöËøáÈ£éÊ∞¥Ë∞ÉÁêÜ„ÄÅ‰Ω©Êà¥Êä§Ë∫´Á¨¶Êù•ÂåñËß£„ÄÇ'
                },
                {
                    title: 'Êñπ‰ΩçË∞ÉÊï¥',
                    content: 'Ê†πÊçÆÁ•ûÁÖûÊñπ‰ΩçÔºåË∞ÉÊï¥Â±Ö‰ΩèÂíåÂ∑•‰ΩúÁéØÂ¢ÉÔºåÈÅøÂºÄ‰∏çÂà©Êñπ‰ΩçÔºåË∂ãÂêëÂêâÂà©ÊñπÂêë„ÄÇ'
                },
                {
                    title: 'Êó∂Èó¥ÈÄâÊã©',
                    content: 'ÈáçË¶Å‰∫ãÊÉÖÈÄâÊã©ÂêâÊó•ËøõË°åÔºåÈÅøÂºÄÂá∂ÁÖûÂΩìÂÄºÁöÑÊó∂Èó¥ÔºåÊèêÈ´òÊàêÂäüÁéá„ÄÇ'
                },
                {
                    title: 'Ë°å‰∏∫ËßÑËåÉ',
                    content: '‰øùÊåÅËâØÂ•ΩÁöÑÈÅìÂæ∑ÂìÅË¥®ÔºåÂ§öÂÅöÂñÑ‰∫ãÔºåÈÅøÂÖç‰∫âÊñóÔºå‰ª•Âæ∑ÂåñËß£ÁÅæÁ•∏„ÄÇ'
                },
                {
                    title: '‰∏ì‰∏öÊåáÂØº',
                    content: 'ÂØªÊ±Ç‰∏ì‰∏öÂëΩÁêÜÂ∏àÁöÑÊåáÂØºÔºåÂà∂ÂÆö‰∏™ÊÄßÂåñÁöÑÂåñËß£ÊñπÊ°àÂíåÂºÄËøêÂª∫ËÆÆ„ÄÇ'
                }
            ];
            
            resolutions.forEach(resolution => {
                const card = document.createElement('div');
                card.className = 'resolution-card';
                card.innerHTML = `
                    <div class="resolution-title">${resolution.title}</div>
                    <div class="resolution-content">${resolution.content}</div>
                `;
                resolutionGrid.appendChild(card);
            });
        }

        function getRandomItems(array, count) {
            const shuffled = [...array].sort(() => 0.5 - Math.random());
            return shuffled.slice(0, count);
        }

        function switchGodsTab(tabName) {
            // ÈöêËóèÊâÄÊúâÁ•ûÁÖûÂÜÖÂÆπ
            document.querySelectorAll('.gods-section').forEach(section => {
                section.classList.remove('active');
            });
            
            // ÁßªÈô§ÊâÄÊúâÊ†áÁ≠æÊåâÈíÆÁöÑÊøÄÊ¥ªÁä∂ÊÄÅ
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // ÊòæÁ§∫ÈÄâ‰∏≠ÁöÑÁ•ûÁÖûÂÜÖÂÆπ
            const targetSection = tabName === 'lucky' ? 'luckyGods' : 
                                tabName === 'evil' ? 'evilGods' : 'specialGods';
            document.getElementById(targetSection).classList.add('active');
            
            // ÊøÄÊ¥ªÂØπÂ∫îÁöÑÊ†áÁ≠æÊåâÈíÆ
            event.target.classList.add('active');
        }

        document.addEventListener('DOMContentLoaded', () => {
            createStars();
            document.getElementById('birthdate').value = '1990-01-01';
            document.getElementById('birthtime').value = '12:00';
        });
    </script>

    <!-- ÂºïÂÖ•ÈÄöÁî®È°µËÑö -->
    <style>
        .mystic-footer {
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.9), rgba(26, 26, 46, 0.95));
            backdrop-filter: blur(10px);
            border-top: 2px solid rgba(0, 255, 255, 0.3);
            padding: 20px;
            text-align: center;
            margin-top: 40px;
            position: relative;
            z-index: 100;
        }

        .mystic-footer .disclaimer-main {
            font-size: 15px;
            color: #ffaa00;
            font-weight: bold;
            margin-bottom: 12px;
            animation: footerGlow 2s ease-in-out infinite alternate;
        }

        @keyframes footerGlow {
            from { text-shadow: 0 0 5px #ffaa00, 0 0 10px #ffaa00; }
            to { text-shadow: 0 0 8px #ffaa00, 0 0 15px #ffaa00, 0 0 20px #ffaa00; }
        }

        .mystic-footer .disclaimer {
            font-size: 13px;
            color: #ccc;
            line-height: 1.5;
            margin-bottom: 15px;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .mystic-footer .footer-links {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            justify-content: center;
            margin-bottom: 12px;
        }

        .mystic-footer .footer-links a {
            color: #888;
            text-decoration: none;
            padding: 6px 12px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            transition: all 0.3s ease;
            font-size: 12px;
        }

        .mystic-footer .footer-links a:hover {
            color: #00ffff;
            border-color: #00ffff;
            background: rgba(0, 255, 255, 0.1);
            transform: translateY(-1px);
        }

        .mystic-footer .copyright {
            font-size: 11px;
            color: #666;
            margin-top: 10px;
        }

        .mystic-footer .wisdom-quote {
            font-size: 12px;
            color: #999;
            font-style: italic;
            opacity: 0.8;
            margin-bottom: 8px;
        }

        /* ÂìçÂ∫îÂºèËÆæËÆ° */
        @media (max-width: 768px) {
            .mystic-footer .footer-links {
                flex-direction: column;
                gap: 8px;
            }
            
            .mystic-footer .disclaimer-main {
                font-size: 13px;
            }
            
            .mystic-footer .disclaimer {
                font-size: 12px;
            }
        }
    </style>

    <footer class="mystic-footer">
        <div class="disclaimer-main">
            ‚ö†Ô∏è ÈáçË¶ÅÊèêÈÜíÔºöÊú¨Á´ôÊâÄÊúâÈ¢ÑÊµãÁªìÊûú‰ªÖ‰æõÂ®±‰πêÂèÇËÄÉÔºåËØ∑ÂãøÂΩìÁúüÔºÅ
        </div>
        <div class="disclaimer">
            üåü ÂëΩËøêÊéåÊè°Âú®Ëá™Â∑±Êâã‰∏≠ÔºåÂç†ÂçúÁªìÊûú‰ªÖ‰∏∫ÂèÇËÄÉ ‚Ä¢ ÁêÜÊÄßÂØπÂæÖÈ¢ÑÊµãÂÜÖÂÆπÔºåÁßØÊûÅÈù¢ÂØπ‰∫∫ÁîüÊåëÊàò<br>
            üîÆ Êú¨Âπ≥Âè∞Ëá¥Âäõ‰∫éÂºòÊâ¨‰º†ÁªüÊñáÂåñÔºåÊâÄÊúâÂÜÖÂÆπÂùá‰∏∫ÊñáÂåñ‰º†Êí≠ÂíåÂ®±‰πêÁõÆÁöÑ
        </div>
        <div class="footer-links">
            <a href="../../index_mystic.html">ËøîÂõûÈ¶ñÈ°µ</a>
            <a href="#" onclick="return false;">ÊúçÂä°Êù°Ê¨æ</a>
            <a href="#" onclick="return false;">ÈöêÁßÅÊîøÁ≠ñ</a>
            <a href="#" onclick="return false;">ÂÖçË¥£Â£∞Êòé</a>
            <a href="#" onclick="return false;">ËÅîÁ≥ªÊàë‰ª¨</a>
        </div>
        <div class="wisdom-quote">
            "Áü•ÂëΩ‰∏çÊÉßÔºåÁü•ËÄåÊó†Áïè" - Êé¢Á¥¢Êú™Áü•ÔºåÊã•Êä±ÂèØËÉΩ
        </div>
        <div class="copyright">
            ¬© 2024 Á•ûÁßòÂ≠¶È¢ÑÊµã‰∏≠ÂøÉ All Rights Reserved | ‰ªÖ‰æõÂ®±‰πê ËØ∑ÂãøÂΩìÁúü
        </div>
    </footer>

    <!-- ÂÖ¨ÂÖ±ÂØºËà™Ê†èËÑöÊú¨ -->
    <script src="../../components/navigation.js"></script>
    <script src="../../components/bazi-sidebar.js"></script>
</body>
</html></html> 